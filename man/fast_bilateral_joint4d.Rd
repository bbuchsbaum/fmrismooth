% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/joint_bilateral.R
\name{fast_bilateral_joint4d}
\alias{fast_bilateral_joint4d}
\title{4D joint bilateral (permutohedral backend; 'grid' alias supported)}
\usage{
fast_bilateral_joint4d(
  vec,
  guide_spatial,
  sigma_s,
  sigma_t,
  sigma_r,
  range_bins = NULL,
  passes = 1L,
  mask = NULL,
  interp_guide = 1L,
  interp_mask = 0L,
  backend = c("grid", "permutohedral"),
  design = NULL,
  sigma_d = 1,
  guides = NULL
)
}
\arguments{
\item{vec}{4D array or `NeuroVec`.}

\item{guide_spatial}{3D spatial guide.}

\item{sigma_s}{Spatial sigma (voxels).}

\item{sigma_t}{Temporal sigma (frames).}

\item{sigma_r}{Range sigma for guide intensity.}

\item{range_bins}{Unused placeholder for grid backend compatibility.}

\item{passes}{Integer number of lattice blur passes.}

\item{mask}{Optional 3D mask.}

\item{interp_guide}{Guide interpolation mode for resampling.}

\item{interp_mask}{Mask interpolation mode for resampling.}

\item{backend}{One of 'grid' or 'permutohedral'.}

\item{design}{Optional length-T design regressor to add as lattice feature.}

\item{sigma_d}{Sigma for the design feature.}

\item{guides}{Optional list of additional 3D guides.}
}
\value{
Smoothed 4D data, wrapped like `vec` when possible.
}
\description{
Joint bilateral filter across space and time using a lattice backend.
}
