% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/st_robust_smooth4d.R
\name{st_robust_smooth4d}
\alias{st_robust_smooth4d}
\title{Spatiotemporal robust smoothing (Huber data term + anisotropic TV)}
\usage{
st_robust_smooth4d(
  vec,
  lambda_s = 0.8,
  lambda_t = 0.25,
  delta = 1.5,
  outer_loops = 3L,
  iters = 25L,
  mask = NULL,
  motion_params = NULL,
  sigma_m = 0.5
)
}
\arguments{
\item{vec}{4D fMRI (array or neuroim2::NeuroVec)}

\item{lambda_s}{spatial TV weight}

\item{lambda_t}{temporal TV weight}

\item{delta}{Huber threshold (in signal units) for the data term; smaller => more robust}

\item{outer_loops}{number of outer IRLS updates (2-5 typical)}

\item{iters}{number of inner primal-dual iterations per outer loop (20-40 typical)}

\item{mask}{3D mask (outside voxels passed through unchanged)}

\item{motion_params}{optional T x 6 (or 3) realignment params to reduce temporal smoothing during high motion}

\item{sigma_m}{motion weighting scale (same units as framewise displacement proxy)}
}
\value{
4D array or NeuroVec
}
\description{
Robust fMRI denoising that downweights outlier frames/voxels (Huber M-estimation)
while preserving edges via anisotropic space-time TV. Solved by outer IRLS loops
(to update Huber data weights) with an inner Chambolle-Pock primal-dual solver.
}
